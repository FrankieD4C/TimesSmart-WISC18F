`timescale 1ns/ 1ps
module tb_MetaDataArray();
	localparam CHECK_DELAY = 0.1;
	localparam CLK_PERIOD = 5;
	
	reg tb_clk, tb_rst_n;
	reg [8:0] tb_DataIn;
	reg [3:0] tb_Write, tb_hit;
	reg [31:0] tb_Block_Enable;
	wire [35:0]tb_DataOut;
	integer test_num;
	always // set clock signal
	begin
		tb_clk = 1'b0;
		#(CLK_PERIOD / 2.0);
		tb_clk = 1'b1;
		#(CLK_PERIOD / 2.0);
	end
	MetaDataArray MUT(.clk(tb_clk), .rst_n(tb_rst_n), .DataIn(tb_DataIn), .Write(tb_Write), .hit(tb_hit), .BlockEnable(tb_Block_Enable), .DataOut(tb_DataOut));

	initial 
	begin
	@(negedge tb_clk);
	tb_rst_n = 0;
	test_num = 0;
	tb_DataIn = 0;
	tb_Write = 0;
	tb_Block_Enable = 0;
	tb_hit = 0;
	@(negedge tb_clk);
	tb_rst_n = 1;
	test_num = 1;
	@(negedge tb_clk);
	@(negedge tb_clk);
	@(negedge tb_clk); // 3 cycles do nothing
	test_num = 2; // read only
	@(negedge tb_clk);
	tb_Block_Enable = 32'b1;
	tb_hit = 4'b1000;
	@(negedge tb_clk);
	tb_hit = 4'b0100;
	@(negedge tb_clk);
	tb_hit = 4'b0010;
	@(negedge tb_clk);
	tb_hit = 4'b0001;
	@(negedge tb_clk);
	tb_hit = 4'b0100;
	@(negedge tb_clk);
	tb_DataIn = 9'b111000001;
	tb_Write = 4'b1000;
	@(negedge tb_clk);
	tb_DataIn = 9'b111000010;
	tb_Write = 4'b0100;
	@(negedge tb_clk);
	tb_DataIn = 9'b111000011;
	tb_Write = 4'b0010;
	@(negedge tb_clk);
	tb_DataIn = 9'b111000100;
	tb_Write = 4'b0001;
	@(negedge tb_clk);
	tb_DataIn = 9'b111010000;
	tb_Write = 4'b0100;
		
	
	
	
	end

endmodule